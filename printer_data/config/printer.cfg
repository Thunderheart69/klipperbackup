# This file contains common pin mappings for the 2017 Creality CR-10
# mini. To use this config, the firmware should be compiled for the
# AVR atmega1284p.

# Note, a number of Melzi boards are shipped with a bootloader that
# requires the following command to flash the board:
#  avrdude -p atmega1284p -c arduino -b 57600 -P /dev/ttyUSB0 -U out/klipper.elf.hex
# If the above command does not work and "make flash" does not work
# then one may need to flash a bootloader to the board - see the
# Klipper docs/Bootloaders.md file for more information.

# See docs/Config_Reference.md for a description of parameters.

[include fluidd.cfg]

[include mymenu.cfg]

[include mymacro.cfg]

[include KAMP_Settings.cfg]

[include shell_command.cfg]

#[include euclid.cfg]

#[include runout_sensor.cfg]

## Client variable macro for your printer.cfg
[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 5.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 5.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : 290  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : 200  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 3600     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
gcode:

[stepper_x]
step_pin: PD7
dir_pin: !PC5
enable_pin: !PD6
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC2
position_endstop: 0
position_max: 300
homing_speed: 20

[stepper_y]
step_pin: PC6
dir_pin: !PC7
enable_pin: !PD6
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC3
position_endstop: 0
position_max: 216
homing_speed: 20

[stepper_z]
step_pin: PB3
dir_pin: PB2
enable_pin: !PA5
microsteps: 16
rotation_distance: 8
endstop_pin: ^PC4
position_endstop: 0.0
position_max: 300

[extruder]
step_pin: PB1
dir_pin: !PB0
enable_pin: !PD6
microsteps: 16
rotation_distance: 7.710
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PD5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA7
min_temp: 0
max_temp: 250
min_extrude_temp: 190
max_extrude_only_distance: 100
pressure_advance:0.060
max_extrude_cross_section: 5

[firmware_retraction]
retract_length: 0.5
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 45
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 45
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[heater_bed]
heater_pin: PD4
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA6
min_temp: 0
max_temp: 130

[bed_screws]
screw1: 45, 30
screw2: 255, 210
screw3: 255, 30
screw4: 45, 210
screw5: 150, 110

#[bed_mesh]
#speed: 120
#horizontal_move_z: 5
#mesh_min: 20, 30
#mesh_max: 270, 210
#probe_count: 5, 3

[fan]
pin: PB4

[mcu]
serial: /dev/ttyUSB0

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 2500
#max_accel_to_decel:7000
max_z_velocity: 5
max_z_accel: 100

[display]
lcd_type: st7920
cs_pin: PA3
sclk_pin: PA1
sid_pin: PC1
encoder_pins: ^PD2, ^PD3
click_pin: ^!PC0

[output_pin BEEPER_pin]
pin: PA4 #   Beeper pin. This parameter must be provided.
pwm: True #   A piezo beeper needs a PWM signal, a DC buzzer doesn't.
value: 0 #   Silent at power on, set to 1 if active low.
shutdown_value: 0 #   Disable at emergency shutdown (no PWM would be available anyway).
cycle_time: 0.001 #   Default PWM frequency : 0.001 = 1ms will give a tone of 1kHz. Although not pitch perfect.

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
   100,100,20  # an example
    
[input_shaper]   

[exclude_object]


# End of file

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.785
#*# pid_ki = 1.599
#*# pid_kd = 129.531
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 73.738
#*# pid_ki = 1.389
#*# pid_kd = 978.878
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 66.4
#*# shaper_type_y = mzv
#*# shaper_freq_y = 29.2
#*#
